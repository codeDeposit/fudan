package com.jy.controller.oa.admin;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.jy.entity.oa.admin.InStock;
import com.jy.service.oa.admin.InStockService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;

@Controller
@RequestMapping("/oa/instock")
public class InStockController {
	
	private InStockService inStockService;

	public InStockService getInStockService() {
		return inStockService;
	}

	@Resource(name="inStockService")
	public void setInStockService(InStockService inStockService) {
		this.inStockService = inStockService;
	}
	
	/**
	 * 添加入库单
	 * @param inStock
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public JsonInfo add(InStock inStock) {
		JsonInfo info = inStockService.save(inStock);
		return info;
	}
	
	/**
	 * 获取详细信息
	 * @param buyId
	 * @return
	 */
	@RequestMapping("/getdetails")
	public ModelAndView getDetails(Long buyId, String operation) {
		InStock inStock = inStockService.getInfoBy(buyId);
		
		ModelAndView mv = new ModelAndView();
		mv.setViewName("system/oa/admin/instock_form");
		mv.addObject("inStock", inStock);
		mv.addObject("operation", operation);
		
		return mv;
	}
	
	/**
	 * 修改信息
	 * @param inStock
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public JsonInfo edit(InStock inStock) {
		JsonInfo info = inStockService.update(inStock);
		return info;
	}
	
	/**
	 * 批量删除
	 * @param buyId
	 * @return
	 */
	@RequestMapping("/multidel")
	@ResponseBody
	public JsonInfo multiDel(Long[] buyId) {
		JsonInfo info = inStockService.del(buyId);
		return info;
	}
	
	/**
	 * 获取列表
	 * @return
	 */
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request, InStock inStock) {
		
		String operation = request.getParameter("operation");
		
		// 接收当前页的参数，并转换
		String pageNoStr = request.getParameter("pageNos");
		int pageNos = 1;
		if(pageNoStr != null) {
			pageNos = Integer.valueOf(pageNoStr);
		}
		
		List<InStock> inStocks = inStockService.get(inStock);
		
		// 设置参数：总行数，总页数，当前页
		PageBean pb = new PageBean(inStocks.size());
		pb.setCurrentPage(pageNos);
		int pageCount = pb.getPageCount();
		
		// 分页显示列表
		List<InStock> pageInStocks = inStockService.getPageList(pb, inStock);
		
		ModelAndView mv = new ModelAndView();
		if("partrefresh".equals(operation)) {
			mv.setViewName("system/oa/admin/instock_table");
		}else {
			mv.setViewName("system/oa/admin/instock_list");
		}
		
		mv.addObject("inStocks", pageInStocks);
		mv.addObject("pageNos", pageNos);
		mv.addObject("pageCount", pageCount);
		
		return mv;
	}
	

}
