package com.jy.service.oa.impl.personal;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.entity.oa.Employee;
import com.jy.entity.oa.OAOrg;
import com.jy.entity.oa.personal.Duty;
import com.jy.entity.oa.personal.DutyVO;
import com.jy.repository.oa.EmployeeMapper;
import com.jy.repository.oa.OAOrgMapper;
import com.jy.repository.oa.personal.DutyMapper;
import com.jy.service.oa.personal.DutyService;
import com.jy.task.utils.DateStringUtil;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Service("dutyService")
public class DutyServiceImpl implements DutyService {

	private DutyMapper dutyMapper;
	private OAOrgMapper orgMapper;
	private EmployeeMapper employeeMapper;

	public OAOrgMapper getOrgMapper() {
		return orgMapper;
	}

	@Autowired
	public void setOrgMapper(OAOrgMapper orgMapper) {
		this.orgMapper = orgMapper;
	}

	public EmployeeMapper getEmployeeMapper() {
		return employeeMapper;
	}

	@Autowired
	public void setEmployeeMapper(EmployeeMapper employeeMapper) {
		this.employeeMapper = employeeMapper;
	}

	public DutyMapper getDutyMapper() {
		return dutyMapper;
	}

	@Autowired
	public void setDutyMapper(DutyMapper dutyMapper) {
		this.dutyMapper = dutyMapper;
	}

	// 添加排班
	@Override
	public JsonInfo save(Duty duty) {
		int result = dutyMapper.insert(duty);
		JsonInfo info = new JsonInfo();
		if (result > 0) {
			info.setSuccess(true);
		} else {
			info.setSuccess(false);
		}
		return info;
	}

	// 修改排班信息
	@Override
	public JsonInfo update(Duty duty) {
		int result = dutyMapper.update(duty);

		JsonInfo info = new JsonInfo();
		if (result > 0) {
			info.setSuccess(true);
		} else {
			info.setSuccess(false);
		}
		return info;
	}

	// 批量删除排班信息
	@Override
	public JsonInfo delete(Long[] dutyId) {
		int result = 0;
		for (Long dId : dutyId) {
			result = dutyMapper.delete(dId);
		}

		JsonInfo info = new JsonInfo();
		if (result > 0) {
			info.setSuccess(true);
		} else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取排班详细信息
	@Override
	public Duty getInfoBy(Long dutyId) {
		Duty duty = dutyMapper.selectInfoBy(dutyId);
		
		duty.setStartTime1(DateStringUtil.dateToString3(duty.getStartTime()));
		duty.setEndTime1(DateStringUtil.dateToString3(duty.getEndTime()));
		
		return duty;
	}

	// 获取排班信息列表
	@Override
	public List<Duty> get(String fullname, String systemName, Date startTime,
			Date endTime) {
		List<Duty> dutys = dutyMapper.select(fullname, systemName, startTime, endTime);
		return dutys;
	}

	@Override
	public List<DutyVO> getPageList(PageBean pb, String fullname,
			String systemName, Date startTime, Date endTime) {
		
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<DutyVO> pagedutys = dutyMapper.selectPageDate(firstIndex, toIndex, fullname, systemName, startTime, endTime);
		
		for(DutyVO dv: pagedutys) {
			Employee employee = employeeMapper.selectItSelf(dv.getUserId());
			OAOrg org = orgMapper.selectInfo(employee.getOrgId());
			dv.setOrgName(org.getName());
			dv.setStartTime1(DateStringUtil.dateToString3(dv.getStartTime()));
			dv.setEndTime1(DateStringUtil.dateToString3(dv.getEndTime()));
		}
		
		return pagedutys;
	}

}
