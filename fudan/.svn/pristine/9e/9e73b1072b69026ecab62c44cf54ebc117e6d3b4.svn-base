package com.jy.controller.oa.info;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.jy.entity.oa.info.News;
import com.jy.service.oa.info.NewsService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;

@Controller
@RequestMapping("/oa/news")
public class NewsController {

	private NewsService newsService;

	public NewsService getNewsService() {
		return newsService;
	}

	@Resource(name="newsService")
	public void setNewsService(NewsService newsService) {
		this.newsService = newsService;
	}

	/**
	 * 模糊查询 列表信息
	 * @param typeId
	 * @param subject
	 * @param author
	 * @return
	 */
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request, @RequestParam(required = false) Long typeId, @RequestParam(required = false) String subject,
			@RequestParam(required = false) String author) {
		String operation = request.getParameter("operation");
		// 接收当前页的参数，并转换
		String pageNoStr = request.getParameter("pageNos");
		int pageNos = 1;
		if(pageNoStr != null) {
			pageNos = Integer.valueOf(pageNoStr);
		}
		List<News> news = newsService.getBy(typeId, subject, author);
		// 设置参数：总行数，总页数，当前页
		PageBean pb = new PageBean(news.size());
		pb.setCurrentPage(pageNos);
		int pageCount = pb.getPageCount();
		// 分页后的列表
		List<News> pageNews = newsService.getPageList(pb,typeId, subject, author);
		ModelAndView mv = new ModelAndView();
		if("partrefresh".equals(operation)) {
			mv.setViewName("system/oa/info/news_table");
		}else {
			mv.setViewName("system/oa/info/news_list");
		}
		mv.addObject("news", pageNews);
		mv.addObject("pageNos", pageNos);
		mv.addObject("pageCount", pageCount);
		return mv;
	}
	
	/**
	 * 添加新闻
	 * @param news
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public JsonInfo add(News news) {
		JsonInfo info = newsService.save(news);
		return info;
	}
	
	/**
	 * 根据newsId获取详细信息
	 * @param news
	 * @return
	 */
	@RequestMapping("/getdetails")
	public ModelAndView getBy(Long newsId, String operation) {
		News news = newsService.getDetailsBy(newsId);
		ModelAndView mv = new ModelAndView();
		mv.setViewName("system/oa/info/news_form");
		mv.addObject("news", news);
		mv.addObject("operation", operation);
		return mv;
	}
	
	/**
	 * 根据newsId 修改信息
	 * @param news
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public JsonInfo edit(News news) {
		news.setUpdateTime(new Date());
		JsonInfo info = newsService.update(news);
		return info;
	}
	
	/**
	 * 根据newsId 批量删除
	 * @param news
	 * @return
	 */
	@RequestMapping("/multidel")
	@ResponseBody
	public JsonInfo multiDel(Long[] newsId) {
		JsonInfo info = newsService.del(newsId);
		return info;
	}
	
	/**
	 * 加载在线编辑器
	 * @return
	 */
	@RequestMapping("/getUmEditor")
	public String getUmEditor() {
		return "system/oa/common/editor";
	}
	
	/**
	 * 发布新闻
	 * @param newsId
	 * @param status
	 * @return
	 */
	@RequestMapping("/release")
	@ResponseBody
	public JsonInfo release(Long newsId, Integer status) {
		JsonInfo info = newsService.release(newsId, status);
		return info;
	}

}
