package com.jy.controller.customer;

import com.jy.common.ajax.AjaxRes;
import com.jy.common.utils.security.AccountShiroUtil;
import com.jy.controller.base.BaseController;
import com.jy.entity.customer.Contacts;
import com.jy.entity.system.account.Account;
import com.jy.service.customer.ContactsService;
import com.jy.service.system.org.RoleService;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller("contactsController")
@RequestMapping({ "backstage/contacts" })
public class ContactsController extends BaseController<Object> {
	
	@Resource(name = "contactsService")
	private ContactsService contactsService;
	@Autowired
	public RoleService roleService;
	
	/**
	 * 列表
	 * @param request
	 * @param model
	 * @param contacts
	 * @return
	 * @throws Exception
	 */
	@RequestMapping({"/list"})
	public String list(HttpServletRequest request, Model model,Contacts contacts) throws Exception {
		boolean mark = false;
		List<Contacts> contactsList = this.contactsService.find(contacts);
		for(int i=0;i<contactsList.size();i++){
			if(contactsList.get(i).getSex().equals("1")){
				contactsList.get(i).setSex("男");
			}else{
				contactsList.get(i).setSex("女");
			}
		}
		//权限判断
		Account currentAccount = AccountShiroUtil.getCurrentUser();
		String orgId = roleService.getOrg(currentAccount.getRoleId()).getId();
		if(orgId.equals("9")){
			mark = true;
		}
		model.addAttribute("mark",mark);
		model.addAttribute("list",contactsList);
		model.addAttribute("count",contactsList.size());
		return "system/customer/contacts/contacts_list";
	}
	
	/**
	 * 添加
	 * @param request
	 * @param contacts
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/add")  
	@ResponseBody
	public AjaxRes add(HttpServletRequest request,Contacts contacts)throws Exception{		
		AjaxRes ar = getAjaxRes();
		contactsService.insert(contacts);
		ar.setSucceedMsg("success");
		return ar;
	}
	
	/**
	 * 删除
	 * @param request
	 * @param customer
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/delete")  
	@ResponseBody
	public AjaxRes delete(HttpServletRequest request,Contacts contacts)throws Exception{		
		AjaxRes ar = getAjaxRes();
		contactsService.delete(contacts);
		ar.setSucceedMsg("success");
		return ar;
	}
	
	/**
	 * 详细
	 * @param request
	 * @param model
	 * @param customer
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/detail")  
	public String detail(HttpServletRequest request,Model model,Contacts contacts)throws Exception{		
		String mark = request.getParameter("mark");//按钮判断
		contacts = contactsService.find(contacts).get(0);
		model.addAttribute("contacts",contacts);
		model.addAttribute("mark",mark);
		return "system/customer/contacts/contacts_detail";
	}
	
	/**
	 * 更新
	 * @param request
	 * @param model
	 * @param customer
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/update")  
	@ResponseBody
	public AjaxRes update(HttpServletRequest request,Model model,Contacts contacts)throws Exception{		
		AjaxRes ar = getAjaxRes();
		contactsService.update(contacts);
		ar.setSucceedMsg("success");
		return ar;
	}
	
}
