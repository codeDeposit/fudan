package com.jy.service.oa.impl.communicate;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.entity.oa.communicate.PhoneGroup;
import com.jy.repository.oa.communicate.PhoneGroupMapper;
import com.jy.service.oa.communicate.PhoneGroupService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;

@Service("phoneGroupService")
public class PhoneGroupServiceImpl implements PhoneGroupService {

	private PhoneGroupMapper phoneGroupMapper;

	public PhoneGroupMapper getphoneGroupMapper() {
		return phoneGroupMapper;
	}

	@Autowired
	public void setphoneGroupMapper(PhoneGroupMapper phoneGroupMapper) {
		this.phoneGroupMapper = phoneGroupMapper;
	}

	// 添加联系人分组
	@Override
	public JsonInfo save(PhoneGroup phoneGroup) {
		int result = phoneGroupMapper.insert(phoneGroup);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 修改联系人分组信息
	@Override
	public JsonInfo update(PhoneGroup phoneGroup) {
		int result = phoneGroupMapper.update(phoneGroup);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取联系人分组信息
	@Override
	public PhoneGroup getBy(Long groupId) {
		PhoneGroup phoneGroup = phoneGroupMapper.selectBy(groupId);
		return phoneGroup;
	}

	// 删除联系人分组
	@Override
	public JsonInfo del(Long[] groupId) {
		int result = 0;
		for(Long gId: groupId) {
			result = phoneGroupMapper.delete(gId);
		}
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取最大的sn值
	@Override
	public Integer getTop() {
		Integer sn = phoneGroupMapper.getTop();
		return sn;
	}

	// 模糊查询获取联系人分组列表
	@Override
	public List<PhoneGroup> getBy(String groupName, Short isShared,
			String userId) {
		List<PhoneGroup> phoneGroups = phoneGroupMapper.selectByALL(groupName, isShared, userId);
		return phoneGroups;
	}

	// 分页获取联系人分组列表
	@Override
	public List<PhoneGroup> getPageList(PageBean pb, String groupName,
			Short isShared, String userId) {
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<PhoneGroup> phoneGroups = phoneGroupMapper.selectPageDate(firstIndex, toIndex, groupName, isShared, userId);
		
		return phoneGroups;
	}

	// 获取所有分类
	@Override
	public List<PhoneGroup> getAll() {
		List<PhoneGroup> phoneGroups = phoneGroupMapper.selectAll();
		return phoneGroups;
	}

}
