package com.jy.controller.oa.publics;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.jy.entity.oa.publics.FileAttach;
import com.jy.service.oa.publics.FileUploadService;

@Controller
@RequestMapping("/file")
public class FileUploadController {
	
	private FileUploadService fileUploadService;

	public FileUploadService getFileUploadService() {
		return fileUploadService;
	}

	@Resource(name="fileUploadService")
	public void setFileUploadService(FileUploadService fileUploadService) {
		this.fileUploadService = fileUploadService;
	}

	/**
	 * 单个文件上传
	 * @param request
	 * @param fileAttach
	 * @return
	 */
	@RequestMapping("/singleupload")
	public void fileUpload(HttpServletRequest request, @RequestParam(value="fileAttach", required = false) MultipartFile fileAttach) {
		// 文件类型
		String fileType = request.getParameter("fileAttachType");
		// 根目录
		String rootPath = request.getSession().getServletContext().getRealPath("/");
		
		if(null != fileAttach && !fileAttach.isEmpty()) {
			fileUploadService.singleUpload(fileAttach, fileType, rootPath);
		}
		
	}
	
	/**
	 * 多文件上传
	 * @param request
	 * @param fileAttach
	 */
	@RequestMapping("/multiupload")
	@ResponseBody
	public List<FileAttach> multiUpload(HttpServletRequest request, @RequestParam(value="fileAttach", required = false) MultipartFile[] fileAttach) {
		// 文件类型
		String fileType = request.getParameter("fileAttachType");
		// 根目录
		String rootPath = request.getSession().getServletContext().getRealPath("/");
		List<FileAttach> fileAttachs = null;
		if(null != fileAttach && fileAttach.length > 0) {
			fileAttachs = fileUploadService.multiUpload(fileAttach, fileType, rootPath);
		}
		return fileAttachs;
	}
	
}
