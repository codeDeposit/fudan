package com.jy.service.oa.impl.info;

import java.util.Date;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.jy.entity.oa.info.NewsComment;
import com.jy.repository.oa.info.NewsCommentMapper;
import com.jy.service.oa.info.NewsCommentService;
import com.jy.task.utils.DateStringUtil;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Service("newsCommentService")
public class NewsCommentServiceImpl implements NewsCommentService {

	private NewsCommentMapper newsCommentMapper;

	public NewsCommentMapper getNewsCommentMapper() {
		return newsCommentMapper;
	}

	@Autowired
	public void setNewsCommentMapper(NewsCommentMapper newsCommentMapper) {
		this.newsCommentMapper = newsCommentMapper;
	}

	// 根据 subject、startTime、endTime、fullname 模糊查询
	@Override
	public List<NewsComment> getBy(String subject, Date startTime, Date endTime, String fullName) {
		List<NewsComment> newsComments = newsCommentMapper.selectBy(subject, startTime, endTime, fullName);
		return newsComments;
	}

	// 根据 commentId 获取详细信息
	@Override
	public NewsComment getDetailsBy(Long commentId) {
		NewsComment newsComment = newsCommentMapper.selectDetails(commentId);
		return newsComment;
	}

	// 修改 newsComment 信息
	@Override
	public JsonInfo update(NewsComment newsComment) {
		JsonInfo info = new JsonInfo();
		int result = newsCommentMapper.update(newsComment);
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 批量删除 
	@Override
	public JsonInfo del(Long[] commentId) {
		JsonInfo info = new JsonInfo();
		for(Long id : commentId) {
			newsCommentMapper.delete(id);
		}
		info.setSuccess(true);
		return info;
	}

	// 分页显示评论列表
	@Override
	public List<NewsComment> getPageList(PageBean pb, String subject,
			Date startTime, Date endTime, String fullname) {
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<NewsComment> pageNewsComments = newsCommentMapper.selectPageDate(firstIndex, toIndex, subject, startTime, endTime, fullname);
		
		for(NewsComment newsComment: pageNewsComments) {
			newsComment.setCreatetime1(DateStringUtil.dateToString4(newsComment.getCreatetime()));
		}
		
		return pageNewsComments;
	}

}
