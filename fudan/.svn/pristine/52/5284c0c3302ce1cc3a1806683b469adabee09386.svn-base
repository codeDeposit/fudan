package com.jy.controller.wzcg;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.jy.common.ajax.AjaxRes;
import com.jy.common.utils.FileUpload;
import com.jy.common.utils.ObjectExcelView;
import com.jy.common.utils.webpage.PageData;
import com.jy.controller.base.BaseController;
import com.jy.entity.wzcg.WzcgItem;
import com.jy.entity.wzcg.WzcgType;
import com.jy.entity.wzcg.WzcgXqtb;
import com.jy.entity.wzcg.WzcgXqyt;
import com.jy.service.wzcg.WzcgItemService;
import com.jy.service.wzcg.WzcgKindService;
import com.jy.service.wzcg.WzcgTypeService;
import com.jy.service.wzcg.WzcgXqtbService;
import com.jy.service.wzcg.WzcgXqytService;

@Controller("wzcgItemController")
@RequestMapping(value="/backstage/wzcg/item")
public class WzcgItemController extends BaseController<WzcgItem> {
	
	@Resource(name="wzcgItemService")
	private WzcgItemService WzcgItemService;
	@Resource(name="wzcgXqytService")
	private WzcgXqytService WzcgXqytService;
	@Resource(name="wzcgXqtbService")
	private WzcgXqtbService WzcgXqtbService;
	@Resource(name="wzcgKindService")
	private WzcgKindService wzcgKindService;
	@Resource(name="wzcgTypeService")
	private WzcgTypeService wzcgTypeService;
	
	/**
	 * 需求预填首页
	 * @param model
	 * @return
	 */
	@RequestMapping("/xqytIndex")  
	public String xqytIndex(HttpServletRequest request,Model model,@ModelAttribute WzcgXqyt wzcgXqyt)throws Exception{		
		return "system/wzcg/xqItem/xqyt_index";
	}
	
	/**
	 * 需求填报首页
	 * @param model
	 * @return
	 */
	@RequestMapping("/xqtbIndex")  
	public String xqtbIndex(HttpServletRequest request,Model model,@ModelAttribute WzcgXqyt wzcgXqyt)throws Exception{		
		return "system/wzcg/xqItem/xqtb_index";
	}
	
	/**
	 * 列表
	 * @param model
	 * @return
	 */
	@RequestMapping("/itemList")  
	public String xqytItemList(HttpServletRequest request,Model model)throws Exception{		
		String mark = request.getParameter("mark");
		String url = null;
		List<WzcgItem> wzcgItemListAll = new ArrayList<WzcgItem>();
		if(mark.equals("xqyt")){
			wzcgItemListAll = WzcgItemService.getXqytItemList();//得到对应需求下的数据
			wzcgItemListAll = WzcgItemService.getItemListFull(wzcgItemListAll);//完善数据
			url = "system/wzcg/xqItem/xqyt_item_list";
		}else{
			wzcgItemListAll = WzcgItemService.getXqtbItemList();//得到对应需求下的数据
			wzcgItemListAll = WzcgItemService.getItemListFull(wzcgItemListAll);//完善数据
			url = "system/wzcg/xqItem/xqtb_item_list";
		}
		model.addAttribute("list",wzcgItemListAll);
		model.addAttribute("count",wzcgItemListAll.size());
		return url;
	}
	
	/**
	 * 列表
	 * @param model
	 * @return
	 */
	@RequestMapping("/list")  
	public String list(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem,String mark)throws Exception{		
		List<WzcgItem> list = WzcgItemService.find(wzcgItem);
		for(int i=0;i<list.size();i++){
			list.get(i).setCategory1(wzcgKindService.getKind(Integer.parseInt(list.get(i).getCategory().split(",")[0])).getName());
			list.get(i).setCategory2(wzcgKindService.getKind(Integer.parseInt(list.get(i).getCategory().split(",")[1])).getName());
			//采购方式
			WzcgType wzcgType = new WzcgType();
			wzcgType.setId(Integer.parseInt(list.get(i).getTypes()));
			list.get(i).setTypes(wzcgTypeService.find(wzcgType).get(0).getName());
		}
		//按钮显示判断，得到当前需求预填状态
		String state = null;
		if(mark.equals("xqyt")){
			WzcgXqyt wzcgXqyt = new WzcgXqyt();
			wzcgXqyt.setXqytId(wzcgItem.getProjectId());
			state = WzcgXqytService.find(wzcgXqyt).get(0).getState();
		}else{
			WzcgXqtb wzcgXqtb = new WzcgXqtb();
			wzcgXqtb.setXqtbId(wzcgItem.getProjectId());
			state = WzcgXqtbService.find(wzcgXqtb).get(0).getState();
		}
		model.addAttribute("state",state);//添加按钮显示判断,已提交不显示
		model.addAttribute("list",list);
		return "system/wzcg/xqItem/xq_item_list";
	}
	
	/**
	 * 搜索
	 */
	@RequestMapping("/search")  
	public String search(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem)throws Exception{		
		String mark = request.getParameter("mark");
		String priceMinStr = request.getParameter("priceMi");
		String priceMaxStr = request.getParameter("priceMa");
		int priceMin = 0;
		int priceMax = 0;
		if(!priceMinStr.equals("")){
			priceMin = Integer.parseInt(priceMinStr);
		}
		if(!priceMaxStr.equals("")){
			priceMax = Integer.parseInt(priceMaxStr);
		}
		wzcgItem.setPriceMin(priceMin);
		wzcgItem.setPriceMax(priceMax);
		wzcgItem.setCategory(wzcgItem.getCategory1() + "," + wzcgItem.getCategory2());
		List<WzcgItem> wzcgItemList = WzcgItemService.search(wzcgItem);//得到查询数据
		List<WzcgItem> wzcgItemListAll = WzcgItemService.SearchList(wzcgItemList,mark);//数据比对得到对应数据
		wzcgItemListAll = WzcgItemService.getItemListFull(wzcgItemListAll);
		model.addAttribute("list",wzcgItemListAll);
		model.addAttribute("count",wzcgItemListAll.size());//数据数量
		return "system/wzcg/xqItem/xqyt_item_list";
	}
	
	/**
	 * 添加
	 * @param model
	 * @return
	 */
	@RequestMapping("/add")  
	@ResponseBody
	public void add(HttpServletRequest request,Model model,
			@ModelAttribute WzcgItem wzcgItem,
			@RequestParam(value = "filePicture", required = false) MultipartFile filePicture)throws Exception{	
		String mark = request.getParameter("mark");//预填或填报判断
		String filePath = "c:\\fudanImage\\xqyt\\" + wzcgItem.getProjectId();
		String fileName = null;
		//单张照片上传
		if(filePicture != null && !filePicture.isEmpty()){
			FileUpload.fileUp(filePicture, filePath, filePicture.getOriginalFilename().substring(0, filePicture.getOriginalFilename().lastIndexOf(".")));
			fileName = filePicture.getOriginalFilename();
		}
		String category1 = request.getParameter("category1");
		String category2 = request.getParameter("category2");
		if(mark.equals("xqyt")){
			WzcgXqyt wzcgXqyt = new WzcgXqyt();
			wzcgXqyt.setXqytId(wzcgItem.getProjectId());
			wzcgXqyt = WzcgXqytService.find(wzcgXqyt).get(0);
			wzcgItem.setAttachment(fileName);
			wzcgItem.setProjectId(wzcgXqyt.getXqytId());
			wzcgItem.setCreator(wzcgXqyt.getCreator());
			wzcgItem.setState(wzcgXqyt.getState());
			wzcgItem.setBm(wzcgXqyt.getBm());
			String amountStr = request.getParameter("amountStr");//得到总价位
			wzcgXqyt.setPrice(amountStr);
			WzcgXqytService.update(wzcgXqyt);
		}else{
			WzcgXqtb wzcgXqtb = new WzcgXqtb();
			wzcgXqtb.setXqtbId(wzcgItem.getProjectId());
			wzcgXqtb = WzcgXqtbService.find(wzcgXqtb).get(0);
			wzcgItem.setAttachment(fileName);
			wzcgItem.setProjectId(wzcgXqtb.getXqtbId());
			wzcgItem.setCreator(wzcgXqtb.getCreator());
			wzcgItem.setState(wzcgXqtb.getState());
			wzcgItem.setBm(wzcgXqtb.getBm());
			String amountStr = request.getParameter("amountStr");//得到总价位
			wzcgXqtb.setPrice(amountStr);
			WzcgXqtbService.update(wzcgXqtb);
		}
		wzcgItem.setCategory(category1 + "," + category2);
		WzcgItemService.insert(wzcgItem);
		
	}
	
	/**
	 * 删除
	 * @param model
	 * @return
	 */
	@RequestMapping("/delete")  
	@ResponseBody
	public AjaxRes delete(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem)throws Exception{		
		String mark = request.getParameter("mark");
		AjaxRes ar = getAjaxRes();
		//得到总价位
		String amountStr = request.getParameter("amountStr");
		wzcgItem = WzcgItemService.find(wzcgItem).get(0);
		if(mark.equals("xqyt")){
			WzcgXqyt wzcgXqyt = new WzcgXqyt();
			wzcgXqyt.setXqytId(wzcgItem.getProjectId());
			wzcgXqyt.setPrice(amountStr);
			WzcgXqytService.update(wzcgXqyt);
		}else{
			WzcgXqtb wzcgXqtb = new WzcgXqtb();
			wzcgXqtb.setXqtbId(wzcgItem.getProjectId());
			wzcgXqtb.setPrice(amountStr);
			WzcgXqtbService.update(wzcgXqtb);
		}
		//item删除
		WzcgItemService.delete(wzcgItem);
		ar.setSucceed("success");
		return ar;
	}
	
	/**
	 * 更新页面
	 * @param model
	 * @return
	 */
	@RequestMapping("/updateView")  
	public String updateView(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem)throws Exception{		
		String mark = request.getParameter("mark");//按钮判断
		wzcgItem = WzcgItemService.find(wzcgItem).get(0);
		wzcgItem.setCategory1(wzcgKindService.getKind(Integer.parseInt(wzcgItem.getCategory().split(",")[0])).getName());
		wzcgItem.setCategory2(wzcgKindService.getKind(Integer.parseInt(wzcgItem.getCategory().split(",")[1])).getName());
		model.addAttribute("wzcgItem",wzcgItem);
		model.addAttribute("mark",mark);
		return "system/wzcg/xqItem/xq_item_edit";
	}
	
	/**
	 * 更新数据
	 * @param model
	 * @return
	 */
	@RequestMapping("/updateData")  
	@ResponseBody
	public AjaxRes updateData(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem)throws Exception{		
		AjaxRes ar = getAjaxRes();
		String category1 = request.getParameter("category1");
		String category2 = request.getParameter("category2");
		wzcgItem.setCategory(category1 + "," + category2);
		WzcgItemService.update(wzcgItem);
		ar.setSucceedMsg("success");
		return ar;
	}
	
	/**
	 * Excel导出
	 */
	@RequestMapping(value="/excel")
	public ModelAndView Excel(HttpServletRequest request,Model model,@ModelAttribute WzcgItem wzcgItem){
		String mark = request.getParameter("mark");
		String priceMinStr = request.getParameter("priceMi");
		String priceMaxStr = request.getParameter("priceMa");
		int priceMin = 0;
		int priceMax = 0;
		if(!priceMinStr.equals("")){
			priceMin = Integer.parseInt(priceMinStr);
		}
		if(!priceMaxStr.equals("")){
			priceMax = Integer.parseInt(priceMaxStr);
		}
		wzcgItem.setPriceMin(priceMin);
		wzcgItem.setPriceMax(priceMax);
		wzcgItem.setCategory(wzcgItem.getCategory1() + "," + wzcgItem.getCategory2());
		ModelAndView mv = null;
		try{
			Map<String,Object> dataMap = new HashMap<String,Object>();
			List<String> titles = new ArrayList<String>();//表格标题
			titles.add("需求预填编号");  		
			titles.add("类别");			
			titles.add("产品");	
			titles.add("名称");
			titles.add("规格");			
			titles.add("要求");			
			titles.add("附件");
			titles.add("数量");	
			titles.add("单位");	
			titles.add("单价(元)");
			titles.add("总额(元)");
			titles.add("交货日期");
			titles.add("采购方式");
			titles.add("状态");
			titles.add("需求部门");
			dataMap.put("titles", titles);
			List<PageData> varList = new ArrayList<PageData>();
			List<WzcgItem> wzcgItemList = WzcgItemService.search(wzcgItem);//得到查询数据
			List<WzcgItem> wzcgItemListAll = WzcgItemService.SearchList(wzcgItemList,mark);//数据比对得到对应数据
			wzcgItemListAll = WzcgItemService.getItemListFull(wzcgItemListAll);
			for(int i=0;i<wzcgItemListAll.size();i++){
				PageData vpd = new PageData();
				vpd.put("var1", wzcgItemListAll.get(i).getProjectId());		
				vpd.put("var2", wzcgItemListAll.get(i).getCategory1());		
				vpd.put("var3", wzcgItemListAll.get(i).getCategory2());			
				vpd.put("var4", wzcgItemListAll.get(i).getProduct());	
				vpd.put("var5", wzcgItemListAll.get(i).getNorms());		
				vpd.put("var6", wzcgItemListAll.get(i).getRequirement());
				vpd.put("var7", wzcgItemListAll.get(i).getAttachment());		
				vpd.put("var8", wzcgItemListAll.get(i).getCounts());
				vpd.put("var9", wzcgItemListAll.get(i).getUnit());		
				vpd.put("var10", wzcgItemListAll.get(i).getPrice());
				vpd.put("var11", wzcgItemListAll.get(i).getAmount());		
				vpd.put("var12", wzcgItemListAll.get(i).getEndDate());
				vpd.put("var13", wzcgItemListAll.get(i).getTypes());
				if(wzcgItemListAll.get(i).getState().equals("1")){
					vpd.put("var14","未提交");
				}else if(wzcgItemListAll.get(i).getState().equals("2")){
					vpd.put("var14","已提交");	
				}else if(wzcgItemListAll.get(i).getState().equals("3")){
					vpd.put("var14","已拒绝");	
				}else{
					vpd.put("var14","已完成");	
				}
				vpd.put("var15", wzcgItemListAll.get(i).getBm());
				varList.add(vpd);
			}
			dataMap.put("varList",varList);
			ObjectExcelView erv = new ObjectExcelView();//执行excel操作
			mv = new ModelAndView(erv,dataMap);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
}
