package com.jy.service.oa.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.common.utils.security.AccountShiroUtil;
import com.jy.entity.oa.Employee;
import com.jy.entity.oa.OAResource;
import com.jy.entity.system.account.Account;
import com.jy.repository.oa.AccountMapper;
import com.jy.repository.oa.OAResourceMapper;
import com.jy.service.oa.OAResourceService;

@Service("oAResourceService")
public class OAResourceServiceImpl implements OAResourceService{
	
	private OAResourceMapper oAResourceMapper;
	private AccountMapper accountMapper;

	public AccountMapper getAccountMapper() {
		return accountMapper;
	}

	@Autowired
	public void setAccountMapper(AccountMapper accountMapper) {
		this.accountMapper = accountMapper;
	}

	public OAResourceMapper getoAResourceMapper() {
		return oAResourceMapper;
	}

	@Autowired
	public void setoAResourceMapper(OAResourceMapper oAResourceMapper) {
		this.oAResourceMapper = oAResourceMapper;
	}

	// 根据用户角色权限，获取OA菜单
	@Override
	public List<OAResource> selectSelfResource() {
		Account currentAccount = AccountShiroUtil.getCurrentUser();
		Employee employee = accountMapper.selectEmployeeByAccountId(currentAccount.getAccountId());
		// 根据角色Id，获取对应的所有一级菜单栏
		List<OAResource> menus = oAResourceMapper.selectAllResourceOfRole(employee.getRoleId());
		for(OAResource menu: menus) {
			recursion(menu);
		}
		
		return menus;
	}
	
	// 递归获取一级菜单下的所有菜单
	private void recursion(OAResource oaResource) {
		// 获取子菜单
		List<OAResource> subResource = oAResourceMapper.selectSubResource(oaResource.getId());
		if(subResource !=null && subResource.size() != 0) {
			// 设置子菜单
			oaResource.setSubResource(subResource);
			for(OAResource sub: subResource) {
				recursion(sub);
			}
		}
	}


}
