package com.jy.controller.oa;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.jy.entity.oa.OAOrg;
import com.jy.service.oa.OAOrgService;

@Controller
@RequestMapping("/oa/org")
public class OAOrgController {
	
	private OAOrgService oaOrgService;

	public OAOrgService getOaOrgService() {
		return oaOrgService;
	}

	@Resource(name="oaOrgService")
	public void setOaOrgService(OAOrgService oaOrgService) {
		this.oaOrgService = oaOrgService;
	}
	
	// 获取所有部门
	@RequestMapping("/listhtml")
	@ResponseBody
	public String listDep() {
		List<OAOrg> orgs = oaOrgService.getAll();
		String html = orgHtml(orgs);
		return html;
	}
	
	// 获取所有部门
	@RequestMapping("/listorg")
	@ResponseBody
	public String listOrg() {
		List<OAOrg> orgs = oaOrgService.getAll();
		String html = orgHtml2(orgs);
		return html;
	}
	
	// 把列表转成HTML的形式打印到页面
	private String orgHtml(List<OAOrg> orgs) {
		StringBuilder sbd = new StringBuilder();
		for(OAOrg org: orgs) {
			sbd.append("<li>");
			sbd.append("<a onclick=\"getOrgByOrg('"+ org.getId() +"')\" class='aHover sIndent'>");
			sbd.append("<i class='glyphicon glyphicon-file'></i>&nbsp;"+org.getName());
			sbd.append("</a>");
			sbd.append("</li>");
		}
		return sbd.toString();
	}
	
	// 把列表转成HTML的形式打印到页面
	private String orgHtml2(List<OAOrg> orgs) {
		StringBuilder sbd = new StringBuilder();
		for(OAOrg org: orgs) {
			sbd.append("<li>");
			sbd.append("<a onclick=\"getEmpByOrg('"+ org.getId() +"')\" class='aHover sIndent'>");
			sbd.append("<i class='glyphicon glyphicon-file'></i>&nbsp;"+org.getName());
			sbd.append("</a>");
			sbd.append("</li>");
		}
		return sbd.toString();
	}
	
	/**
	 * 获取部门详细信息
	 * @return
	 */
	@RequestMapping("/getdetails")
	public ModelAndView getDetails(String orgId) {
		
		List<OAOrg> orgs = oaOrgService.getInfoBy(orgId);
		
		ModelAndView mv = new ModelAndView();
		mv.addObject("orgs", orgs);
		mv.setViewName("system/oa/oarole/org_table");
		
		return mv;
	}
	
	/**
	 * 获取部门详细信息
	 * @return
	 */
	@RequestMapping("/getdetails2")
	@ResponseBody
	public List<OAOrg> getDetails2(String orgId) {
		List<OAOrg> orgs = oaOrgService.getInfoBy(orgId);
		return orgs;
	}
	
	/**
	 * json形式的所有Org列表
	 * @return
	 */
	@RequestMapping("/listall")
	@ResponseBody
	public List<OAOrg> listAll() {
		List<OAOrg> orgs = oaOrgService.getAll();
		return orgs;
	}
	
	/**
	 * 根据员工ID获取部门
	 * @return
	 */
	@RequestMapping("/listbyempid")
	@ResponseBody
	public OAOrg listByEmpId(String userId) {
		OAOrg org = oaOrgService.getInfoByEmpId(userId);
		return org;
	}

}
