package com.jy.service.oa.impl.admin;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.entity.oa.admin.AssetsType;
import com.jy.repository.oa.admin.AssetsTypeMapper;
import com.jy.service.oa.admin.AssetsTypeService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Service("assetsTypeService")
public class AssetsTypeServiceImpl implements AssetsTypeService {

	private AssetsTypeMapper assetsTypeMapper;

	public AssetsTypeMapper getAssetsTypeMapper() {
		return assetsTypeMapper;
	}

	@Autowired
	public void setAssetsTypeMapper(AssetsTypeMapper assetsTypeMapper) {
		this.assetsTypeMapper = assetsTypeMapper;
	}

	// 添加资产类型
	@Override
	public JsonInfo save(AssetsType assetsType) {
		int result = assetsTypeMapper.insert(assetsType);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 修改资产类型
	@Override
	public JsonInfo update(AssetsType assetsType) {
		int result = assetsTypeMapper.update(assetsType);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取详细信息
	@Override
	public AssetsType getInfoBy(Long assetsTypeId) {
		AssetsType assetsType = assetsTypeMapper.selectInfoBy(assetsTypeId);
		return assetsType;
	}

	// 获取列表 
	@Override
	public List<AssetsType> get(String typeName) {
		List<AssetsType> assetsTypes = assetsTypeMapper.select(typeName);
		return assetsTypes;
	}

	// 删除资产类型
	@Override
	public JsonInfo del(Long assetsTypeId) {
		int result = assetsTypeMapper.delete(assetsTypeId);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 分页获取资产类型
	@Override
	public List<AssetsType> getPageList(PageBean pb, String typeName) {
		
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<AssetsType> assetsTypes = assetsTypeMapper.selectPageData(firstIndex, toIndex, typeName);
		
		return assetsTypes;
		
	}

	// 获取所有资产类型
	@Override
	public List<AssetsType> getAll() {
		List<AssetsType> assetsTypes = assetsTypeMapper.selectAll();
		return assetsTypes;
	}

}
