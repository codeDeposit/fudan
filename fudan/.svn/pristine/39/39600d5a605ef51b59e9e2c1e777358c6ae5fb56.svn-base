package com.jy.service.oa.impl.admin;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.entity.oa.admin.GoodsApply;
import com.jy.entity.oa.admin.OfficeGoods;
import com.jy.repository.oa.admin.GoodsApplyMapper;
import com.jy.repository.oa.admin.OfficeGoodsMapper;
import com.jy.service.oa.admin.GoodsApplyService;
import com.jy.task.utils.DateStringUtil;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Service("goodsApplyService")
public class GoodsApplyServiceImpl implements GoodsApplyService {

	private GoodsApplyMapper goodsApplyMapper;
	private OfficeGoodsMapper officeGoodsMapper;

	public OfficeGoodsMapper getOfficeGoodsMapper() {
		return officeGoodsMapper;
	}

	@Autowired
	public void setOfficeGoodsMapper(OfficeGoodsMapper officeGoodsMapper) {
		this.officeGoodsMapper = officeGoodsMapper;
	}

	public GoodsApplyMapper getGoodsApplyMapper() {
		return goodsApplyMapper;
	}

	@Autowired
	public void setGoodsApplyMapper(GoodsApplyMapper goodsApplyMapper) {
		this.goodsApplyMapper = goodsApplyMapper;
	}

	// 添加申请单
	@Override
	public JsonInfo save(GoodsApply goodsApply) {
		JsonInfo info = new JsonInfo();
		OfficeGoods officeGoods=officeGoodsMapper.selectInfoBy(goodsApply.getGoodsId());
		Integer con=goodsApply.getUseCounts();
		Integer least=officeGoods.getStockCounts()-con;
		if(least>0){
			SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss-SSSS");//自动生成申请号
			goodsApply.setApplyNo("GA"+sdf.format(new Date()));
			if(goodsApply.getApplyId()==null){
				goodsApply.setApprovalStatus((short)0);//设初始值为0,即是为未通过审批
			}
		}else {
			info.setSuccess(false);
			info.setMessage("库存不足!");
			return info;
		}
		int result = goodsApplyMapper.insert(goodsApply);
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取详细信息
	@Override
	public GoodsApply getInfoBy(Long applyId) {
		GoodsApply goodsApply = goodsApplyMapper.selectInfoBy(applyId);
		
		goodsApply.setApplyDate1(DateStringUtil.dateToString3(goodsApply.getApplyDate()));
		
		return goodsApply;
	}

	// 修改信息
	@Override
	public JsonInfo update(GoodsApply goodsApply) {
		int result = goodsApplyMapper.update(goodsApply);
		JsonInfo info = new JsonInfo();
		if (result > 0) {
			info.setSuccess(true);
		} else {
			info.setSuccess(false);
		}
		return info;
	}

	// 批量删除
	@Override
	public JsonInfo del(Long[] applyId) {
		int result = 0;
		for (Long aId : applyId) {
			result = goodsApplyMapper.delete(aId);
		}
		JsonInfo info = new JsonInfo();
		if (result > 0) {
			info.setSuccess(true);
		} else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取申请列表
	@Override
	public List<GoodsApply> get(GoodsApply goodsApply) {
		List<GoodsApply> goodsApplys = goodsApplyMapper.selectBy(goodsApply);
		return goodsApplys;
	}

	// 申请单分页列表
	@Override
	public List<GoodsApply> getPageList(PageBean pb, GoodsApply goodsApply) {
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<GoodsApply> goodsApplys = goodsApplyMapper.selectPageData(firstIndex, toIndex, goodsApply);
		
		for(GoodsApply ga : goodsApplys) {
			ga.setApplyDate1(DateStringUtil.dateToString3(ga.getApplyDate()));
		}
		
		return goodsApplys;
	}

	// 审核申请单，审核成功，商品数量相应减少
	@Override
	public JsonInfo review(Long goodsId, Short status) {
		JsonInfo info = new JsonInfo();
		goodsApplyMapper.updateStatus(goodsId, status);
		info.setSuccess(true);
		return info;
	}

}
