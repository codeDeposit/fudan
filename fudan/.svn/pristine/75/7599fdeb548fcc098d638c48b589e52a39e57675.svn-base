package com.jy.service.oa.impl.admin;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jy.entity.oa.admin.OfficeGoods;
import com.jy.entity.oa.admin.OfficeGoodsType;
import com.jy.repository.oa.admin.OfficeGoodsMapper;
import com.jy.repository.oa.admin.OfficeGoodsTypeMapper;
import com.jy.service.oa.admin.OfficeGoodsTypeService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Service("officeGoodsTypeService")
public class OfficeGoodsTypeServiceImpl implements OfficeGoodsTypeService {

	private OfficeGoodsTypeMapper officeGoodsTypeMapper;
	private OfficeGoodsMapper officeGoodsMapper;

	public OfficeGoodsMapper getOfficeGoodsMapper() {
		return officeGoodsMapper;
	}

	@Autowired
	public void setOfficeGoodsMapper(OfficeGoodsMapper officeGoodsMapper) {
		this.officeGoodsMapper = officeGoodsMapper;
	}

	public OfficeGoodsTypeMapper getOfficeGoodsTypeMapper() {
		return officeGoodsTypeMapper;
	}

	@Autowired
	public void setOfficeGoodsTypeMapper(OfficeGoodsTypeMapper officeGoodsTypeMapper) {
		this.officeGoodsTypeMapper = officeGoodsTypeMapper;
	}

	// 添加办公品类型
	@Override
	public JsonInfo save(OfficeGoodsType officeGoodsType) {
		int result = officeGoodsTypeMapper.insert(officeGoodsType);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 获取办公品类型详细信息
	@Override
	public OfficeGoodsType getInfoBy(Long typeId) {
		OfficeGoodsType officeGoodsType = officeGoodsTypeMapper.selectInfoBy(typeId);
		return officeGoodsType;
	}

	// 修改办公品类型信息
	@Override
	public JsonInfo update(OfficeGoodsType officeGoodsType) {
		int result = officeGoodsTypeMapper.update(officeGoodsType);
		JsonInfo info = new JsonInfo();
		if(result > 0) {
			info.setSuccess(true);
		}else {
			info.setSuccess(false);
		}
		return info;
	}

	// 删除办公品类型
	@Override
	public JsonInfo delete(Long[] typeId) {
		
		// 查询办公品类别下是否有办公用品，如果有，则提示此办公品类别下有办公品了，是否确定删除，如果确定删除则把所有的办公品删除，然后删除办公品类别
		String goodsName = "";
		for(Long tId: typeId) {
			List<OfficeGoods> officeGoods = officeGoodsMapper.select(goodsName, tId);
			for(OfficeGoods good: officeGoods) {
				
				
				
				officeGoodsMapper.delete(good.getGoodsId());
			}
			officeGoodsTypeMapper.delete(tId);
		}
		
		JsonInfo info = new JsonInfo();
		info.setSuccess(true);
		return info;
	}

	// 获取类型列表
	@Override
	public List<OfficeGoodsType> getAll(String typeName) {
		List<OfficeGoodsType> officeGoodsType = officeGoodsTypeMapper.selectAll(typeName);
		return officeGoodsType;
	}

	@Override
	public List<OfficeGoodsType> getPageList(PageBean pb, String typeName) {
		// 每页行数
		int pageSize = pb.getPageSize();
		// 当前页数
		int currentPage = pb.getCurrentPage();
		
		// 从哪个索引开始查
		int firstIndex = (currentPage-1) * pageSize;
		// 到哪个索引
		int toIndex = currentPage * pageSize;
		
		List<OfficeGoodsType> pageOfficeGoodsTypes = officeGoodsTypeMapper.selectPageDate(firstIndex, toIndex, typeName);
		
		return pageOfficeGoodsTypes;
	}

}
