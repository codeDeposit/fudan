package com.jy.controller.oa.admin;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.jy.entity.oa.admin.Car;
import com.jy.entity.oa.publics.FileAttach;
import com.jy.service.oa.admin.CarService;
import com.jy.service.oa.publics.FileUploadService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Controller
@RequestMapping("/oa/car")
public class CarController {

	private CarService carService;
	private FileUploadService fileUploadService;

	public FileUploadService getFileUploadService() {
		return fileUploadService;
	}

	@Resource(name="fileUploadService")
	public void setFileUploadService(FileUploadService fileUploadService) {
		this.fileUploadService = fileUploadService;
	}

	public CarService getCarService() {
		return carService;
	}

	@Resource(name="carService")
	public void setCarService(CarService carService) {
		this.carService = carService;
	}
	
	/**
	 * 添加车辆
	 * @param car
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public JsonInfo add(HttpServletRequest request, Car car, @RequestParam(value="img") MultipartFile img) {
		// 根目录
		String rootPath = request.getSession().getServletContext().getRealPath("/");
		String imgUrl = null;
		FileAttach fa = null;
		if(null != img) {
			fa = fileUploadService.singleUpload(img, null, rootPath);
		}
		imgUrl = fa.getFilePath() + fa.getFileName() + fa.getExt();
		car.setCartImage(imgUrl);
		JsonInfo info = carService.save(car);
		return info;
	}
	
	/**
	 * 获取车的详细信息
	 * @param carId
	 * @return
	 */
	@RequestMapping("/getdetails")
	public ModelAndView getDetails(Long carId, String operation) {
		Car car = carService.getInfoBy(carId);
		
		ModelAndView mv = new ModelAndView();
		mv.setViewName("system/oa/admin/car_form");
		mv.addObject("car", car);
		mv.addObject("operation", operation);
		
		return mv;
	}
	
	/**
	 * 修改车的信息
	 * @param car
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public JsonInfo edit(HttpServletRequest request, Car car, @RequestParam(value="imgedit") MultipartFile img) {
		if(img != null) {
			// 根目录
			String rootPath = request.getSession().getServletContext().getRealPath("/");
			FileAttach fa = fileUploadService.singleUpload(img, null, rootPath);
			String imgUrl = fa.getFilePath() + fa.getFileName() + fa.getExt();
			car.setCartImage(imgUrl);
		}
		JsonInfo info = carService.update(car);
		return info;
	}
	
	/**
	 * 批量删除
	 * @param carId
	 * @return
	 */
	@RequestMapping("/multidel")
	@ResponseBody
	public JsonInfo multiDel(Long[] carId) {
		JsonInfo info = carService.update(carId);
		return info;
	}
	
	/**
	 * 获取车列表
	 * @param car
	 * @return
	 */
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request, Car car) {
		
		String operation = request.getParameter("operation");
		// 接收当前页的参数，并转换
		String pageNoStr = request.getParameter("pageNos");
		int pageNos = 1;
		if(pageNoStr != null) {
			pageNos = Integer.valueOf(pageNoStr);
		}
		
		List<Car> cars = carService.get(car);
		
		// 设置参数：总行数，总页数，当前页
		PageBean pb = new PageBean(cars.size());
		pb.setCurrentPage(pageNos);
		int pageCount = pb.getPageCount();
		
		//分页后列表
		List<Car> pageCars = carService.getPageList(pb, car);
		
		ModelAndView mv = new ModelAndView();
		if("partrefresh".equals(operation)) {
			mv.setViewName("system/oa/admin/cars_table");
		}else {
			mv.setViewName("system/oa/admin/cars_list");
		}
		
		mv.addObject("cars", pageCars);
		mv.addObject("pageNos", pageNos);
		mv.addObject("pageCount", pageCount);
		
		return mv;
	}
	
	/**
	 * 获取所有的车辆列表
	 * @return
	 */
	@RequestMapping("/listall")
	@ResponseBody
	public List<Car> listAll(@RequestParam(required=false) String carNo) {
		Car car = new Car();
		car.setCarNo(carNo);
		List<Car> cars = carService.get(car);
		return cars;
	}

}
