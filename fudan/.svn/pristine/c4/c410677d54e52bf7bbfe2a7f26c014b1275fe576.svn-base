package com.jy.controller.oa.admin;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.jy.entity.oa.admin.BookType;
import com.jy.service.oa.admin.BookTypeService;
import com.jy.task.utils.JsonInfo;
import com.jy.task.utils.PageBean;


@Controller
@RequestMapping("/oa/booktype")
public class BookTypeController {

	private BookTypeService bookTypeService;

	public BookTypeService getBookTypeService() {
		return bookTypeService;
	}

	@Resource(name="bookTypeService")
	public void setBookTypeService(BookTypeService bookTypeService) {
		this.bookTypeService = bookTypeService;
	}

	/**
	 * 添加图书类别
	 * 
	 * @param bookType
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public JsonInfo add(BookType bookType) {
		JsonInfo info = bookTypeService.save(bookType);
		return info;
	}

	/**
	 * 修改图书类别信息
	 * 
	 * @param bookType
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public JsonInfo edit(BookType bookType) {
		JsonInfo info = bookTypeService.update(bookType);
		return info;
	}

	/**
	 * 获取详细信息
	 * 
	 * @param typeId
	 * @return
	 */
	@RequestMapping("/getdetails")
	public ModelAndView getDetails(Long typeId, String operation) {
		BookType bookType = bookTypeService.getInfoBy(typeId);
		
		ModelAndView mv = new ModelAndView();
		mv.addObject("bookType", bookType);
		mv.setViewName("system/oa/admin/booktype_form");
		mv.addObject("operation", operation);
		
		return mv;
	}
	
	/**
	 * 批量删除
	 * @param typeId
	 * @return
	 */
	@RequestMapping("/multidel")
	@ResponseBody
	public JsonInfo multiDel(Long[] typeId) {
		JsonInfo info = bookTypeService.delete(typeId);
		return info;
	}
	
	/**
	 * 获取所有图书类别列表
	 * @return
	 */
	@RequestMapping("/listall")
	@ResponseBody
	public List<BookType> listAll() {
		String typeName = "";
		List<BookType> bookTypes = bookTypeService.get(typeName);
		return bookTypes;
	}
	
	/**
	 * 分页获取图书类别列表
	 * @param typeName
	 * @return
	 */
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request, @RequestParam(required=false) String typeName) {
		
		String operation = request.getParameter("operation");
		
		// 接收参数并转换
		String pageNosStr = request.getParameter("pageNos");
		Integer pageNos = null;
		if(!(pageNosStr == null)) {
			pageNos = Integer.valueOf(pageNosStr);
		}else {
			pageNos = 1;
		}
		
		// 获取图书类别总数
		List<BookType> bookTypes = bookTypeService.get(typeName);
		
		// 设置参数：总行数，总页数，当前页
		PageBean pb = new PageBean(bookTypes.size());
		pb.setCurrentPage(pageNos);
		int pageCount = pb.getPageCount();
		
		// 分页后的列表
		List<BookType> pageBookTypes = bookTypeService.getPageList(pb, typeName);
		
		ModelAndView mv = new ModelAndView();
		if("partrefresh".equals(operation)) {
			mv.setViewName("system/oa/admin/booktype_table");
		}else {
			mv.setViewName("system/oa/admin/booktype_list");
		}
		
		mv.addObject("bookTypes", pageBookTypes);
		mv.addObject("pageNos", pageNos);
		mv.addObject("pageCount", pageCount);
		
		return mv;
	}
	
	/**
	 * 获取所有图书类别列表
	 * @return
	 */
	@RequestMapping("/listhtml")
	@ResponseBody
	public String listHTML() {
		String typeName = "";
		List<BookType> bookTypes = bookTypeService.get(typeName);
		String html = orgHtml(bookTypes);
		return html;
	}
	
	// 把列表转成HTML的形式打印到页面
	private String orgHtml(List<BookType> bookTypes) {
		StringBuilder sbd = new StringBuilder();
		for(BookType bookType: bookTypes) {
			sbd.append("<li>");
			sbd.append("<a onclick=\"getBookByType('"+ bookType.getTypeId() +"')\" class='aHover sIndent'>");
			sbd.append("<i class='glyphicon glyphicon-file'></i>&nbsp;"+bookType.getTypeName());
			sbd.append("</a>");
			sbd.append("</li>");
		}
		return sbd.toString();
	}
	
}
