package com.jy.controller.system.backstage;

import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import org.apache.commons.lang3.StringUtils;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.session.Session;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import com.jy.common.utils.base.Const;
import com.jy.common.utils.security.AccountShiroUtil;
import com.jy.common.utils.tree.MenuTreeUtil;
import com.jy.controller.base.BaseController;
import com.jy.entity.setting.WebSite;
import com.jy.entity.system.account.Account;
import com.jy.entity.system.org.Role;
import com.jy.entity.system.resources.Resources;
import com.jy.service.setting.WebSiteService;
import com.jy.service.system.account.AccountService;
import com.jy.service.system.org.RoleService;
import com.jy.service.system.resources.ResourcesService;

@Controller
@RequestMapping("mobile/")
public class MobileBackstageController extends BaseController<Object>{
	
	@Autowired
	public ResourcesService menuService;
	@Autowired
	private AccountService accountService;
	@Autowired
	private RoleService roleService;
	@Autowired
	private WebSiteService webSiteService;
	
	/*
	 * 访问系统首页
	 */
	@RequestMapping("index")
	public String index(Model model,HttpServletRequest request){
		Account  acount = AccountShiroUtil.getCurrentUser();
		List<Resources> menus = new ArrayList<Resources>();//菜单列表数组定义
		String userId = "";
		String menu = "";
		String ref = "y";
		String layer = "0";
		Object menu_o = null;
		try {
			Session session = SecurityUtils.getSubject().getSession();//shiro获取用户信息,shiro管理的session
			acount = (Account) session.getAttribute(Const.SESSION_USER);//获得用户
			userId = acount.getAccountId();//获得用户Id
			if(!"y".equals(ref)){//首次登陆菜单调取
				menu_o = session.getAttribute(Const.SESSION_MENULIST);
			}
			menus = (List<Resources>)menu_o;
			if(menus == null){
				if(StringUtils.isBlank(layer)){//layer为空，boolean变量为true
					layer = "1";
				}
				menus = menuService.findMenuTree(userId,layer);
				session.setAttribute(Const.SESSION_MENULIST, menus);
			}
			if(menus != null){
				menu = MenuTreeUtil.mobileIndexBuildTreeHtml(menus);	
			}
			//session注入
			session.setAttribute("loginName", acount.getLoginName());
			session.setAttribute("orgName", roleService.getOrg(acount.getRoleId()).getName());
			session.setAttribute("picUrl", acount.getPicUrl());
			WebSite webSite	= webSiteService.find().get(0);
			session.setAttribute("logo",webSite.getLogo());
			session.setAttribute("webSiteName",webSite.getWebTitleWord());
			session.setAttribute("copyright",webSite.getCopyright());
			if(acount.getName() == null ||  acount.getName().equals("")){
				session.setAttribute("name","用户");
			}else{
				session.setAttribute("name", acount.getName());
			}
		} catch (Exception e) {
			logger.error(e.toString(),e);
		}	
		model.addAttribute("menu",menu);
		return "mobile/index/index";
	}
	
	/*
	 * 二级菜单
	 */
	@RequestMapping("index2")
	public String index2(Model model,HttpServletRequest request){	
		String path = request.getContextPath();
		String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
		Account acount = AccountShiroUtil.getCurrentUser();
		List<Resources> menus = new ArrayList<Resources>();//菜单列表数组定义
		List<Resources> menus2 = new ArrayList<Resources>();//菜单列表数组定义
		String userId = "";
		String menu = "";
		String ref = request.getParameter("ref");
		String layer = request.getParameter("layer");
		String menuId = request.getParameter("menuId");
		String menuName = request.getParameter("menuName");
		Object menu_o = null;
		StringBuffer html = new StringBuffer();
		try {
			Session session = SecurityUtils.getSubject().getSession();//shiro获取用户信息,shiro管理的session
			acount = (Account) session.getAttribute(Const.SESSION_USER);//获得用户
			userId = acount.getAccountId();//获得用户Id
			menus = menuService.findMenuTree(userId,layer);
			for(Resources res : menus){
				if(res.getParentId().equals(menuId)){
					html.append("<li class='aui-list-item' onclick=\"getMenu2("+res.getLayer()+",\'"+ res.getId() +"\','"+ menuName +"')\" >");
					html.append("<div class='aui-list-item-inner aui-list-item-arrow'>"); 
					html.append("<div class='aui-list-item-title'>"+ res.getName() +"</div>");
					html.append("</div></li>");
				}
			}
		} catch (Exception e) {
			logger.error(e.toString(),e);
		}			
		model.addAttribute("menu",html);
		model.addAttribute("menuName",menuName);
		return "mobile/index/menu";
	}
	
	/*
	 * 三级菜单
	 */
	@RequestMapping("index3")
	public String index3(Model model,HttpServletRequest request){	
		String path = request.getContextPath();
		String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
		Account acount = AccountShiroUtil.getCurrentUser();
		List<Resources> menus = new ArrayList<Resources>();//菜单列表数组定义
		List<Resources> menus2 = new ArrayList<Resources>();//菜单列表数组定义
		String userId = "";
		String menu = "";
		String ref = request.getParameter("ref");
		String layer = request.getParameter("layer");
		String menuId = request.getParameter("menuId");
		Object menu_o = null;
		String menuName = request.getParameter("menuName");
		StringBuffer html = new StringBuffer();
		try {
			Session session = SecurityUtils.getSubject().getSession();//shiro获取用户信息,shiro管理的session
			acount = (Account) session.getAttribute(Const.SESSION_USER);//获得用户
			userId = acount.getAccountId();//获得用户Id
			menus = menuService.findMenuTree(userId,layer);
			for(Resources res : menus){
				if(res.getParentId().equals(menuId)){
					html.append("<a href='"+basePath+"mobile/"+ res.getResUrl() +"'><li class='aui-list-item'>");
					html.append("<div class='aui-list-item-inner aui-list-item-arrow'>"); 
					html.append("<div class='aui-list-item-title'>"+ res.getName() +"</div>");
					html.append("</div></li></a>");
				}
			}
		} catch (Exception e) {
			logger.error(e.toString(),e);
		}			
		model.addAttribute("menu",html);
		model.addAttribute("menuName",menuName);
		return "mobile/index/menu";
	}
	
	/*
	 * 个人设置页面
	 */
	@RequestMapping("personalsetting")
	public String personalSetting(Model model) {
		Account account = AccountShiroUtil.getCurrentUser();
		account = accountService.accountInfo(account);
		Role role = roleService.getAccountRole(account.getId());
		account.setRoleName(role.getName());
		model.addAttribute("account", account);
		return "mobile/index/personalSetting";
	}
	
}